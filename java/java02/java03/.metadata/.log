!SESSION 2023-02-27 10:27:08.331 -----------------------------------------------
eclipse.buildId=4.17.2.202301310704
java.version=17.0.6
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.springframework.boot.ide.branding.sts4
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.springframework.boot.ide.branding.sts4

!ENTRY ch.qos.logback.classic 1 0 2023-02-27 10:27:10.037
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-02-27 10:27:21.608
!MESSAGE Logback config file: C:\Cohorte 23\java\java02\java03\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-02-27 10:27:24.979
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-02-27 10:27:24.979
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-02-27 10:27:24.979
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-02-27 10:27:30.616
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Bart_'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.ui 2 2 2023-02-27 10:28:59.671
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)

!ENTRY org.eclipse.lsp4e 2 0 2023-02-27 10:39:03.297
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.lsp4e 2 0 2023-02-27 11:04:45.004
!MESSAGE Javadoc unavailable. Failed to obtain it.
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:386)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.getHoverInfo2(LSJavaHoverProvider.java:70)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 11:13:50.391
!MESSAGE Exception occurred during problem detection:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es" + fahrenheit);

        System.out.println("1 centigrado a kelvin es" + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string 

        String cantidad = “15”;

        String precio = “115.20”;

        que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         (Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un 

        int edad = 30;

        double estatura = 1.61;

        supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(SourceElementParser.java:861)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1138)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:273)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:193)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-02-27 11:13:50.394
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 1
Java Model Exception: java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:326)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:193)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)
Caused by: java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(SourceElementParser.java:861)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1138)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:273)
	... 18 more
Caused by: java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(SourceElementParser.java:861)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1138)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:273)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:193)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2023-02-27 11:13:50.395
!MESSAGE Index -1 out of bounds for length 10
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(SourceElementParser.java:861)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1138)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:273)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:193)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2023-02-27 11:13:50.395
!MESSAGE Index -1 out of bounds for length 10
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(SourceElementParser.java:861)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1138)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:273)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:193)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-02-27 11:13:50.397
!MESSAGE Error in JDT Core during reconcile
!STACK 1
Java Model Exception: java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:326)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:193)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)
Caused by: java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(SourceElementParser.java:861)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1138)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:273)
	... 18 more
Caused by: java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(SourceElementParser.java:861)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1138)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:273)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:193)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2023-02-27 11:13:50.398
!MESSAGE Index -1 out of bounds for length 10
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(SourceElementParser.java:861)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1138)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:273)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:193)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-02-27 11:13:50.463
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReference(Parser.java:12245)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1270)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:790)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1245)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-02-27 11:13:50.466
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReference(Parser.java:12245)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1270)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:790)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1245)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-02-27 11:13:58.181
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReference(Parser.java:12245)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1270)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:790)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1245)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-02-27 11:13:58.182
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReference(Parser.java:12245)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1270)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:790)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1245)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-02-27 11:13:58.924
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReference(Parser.java:12245)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1270)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:790)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1245)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-02-27 11:13:58.925
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReference(Parser.java:12245)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1270)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:790)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1245)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 11:14:02.412
!MESSAGE Exception occurred during problem detection:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es" + fahrenheit);

        System.out.println("1 centigrado a kelvin es" + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string 

        String cantidad = “15”;

        String precio = “115.20”;

        que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         (Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un 

        int edad = 30;

        double estatura = 1.61;

        */supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(SourceElementParser.java:861)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1138)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:273)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:193)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-02-27 11:14:02.415
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 1
Java Model Exception: java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:326)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:193)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)
Caused by: java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(SourceElementParser.java:861)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1138)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:273)
	... 18 more
Caused by: java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(SourceElementParser.java:861)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1138)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:273)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:193)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2023-02-27 11:14:02.415
!MESSAGE Index -1 out of bounds for length 10
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(SourceElementParser.java:861)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1138)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:273)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:193)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2023-02-27 11:14:02.415
!MESSAGE Index -1 out of bounds for length 10
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(SourceElementParser.java:861)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1138)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:273)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:193)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-02-27 11:14:02.437
!MESSAGE Error in JDT Core during reconcile
!STACK 1
Java Model Exception: java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:326)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:193)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)
Caused by: java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(SourceElementParser.java:861)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1138)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:273)
	... 18 more
Caused by: java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(SourceElementParser.java:861)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1138)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:273)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:193)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2023-02-27 11:14:02.438
!MESSAGE Index -1 out of bounds for length 10
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(SourceElementParser.java:861)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1138)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:273)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:193)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-02-27 11:14:02.489
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReference(Parser.java:12245)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1270)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:790)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1245)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-02-27 11:14:02.490
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReference(Parser.java:12245)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1270)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:790)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1245)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 11:14:04.353
!MESSAGE Exception occurred during problem detection:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es" + fahrenheit);

        System.out.println("1 centigrado a kelvin es" + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string 

        String cantidad = “15”;

        String precio = “115.20”;

        que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         (Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un 

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(SourceElementParser.java:861)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1138)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:273)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:193)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-02-27 11:14:04.354
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 1
Java Model Exception: java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:326)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:193)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)
Caused by: java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(SourceElementParser.java:861)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1138)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:273)
	... 18 more
Caused by: java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(SourceElementParser.java:861)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1138)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:273)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:193)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2023-02-27 11:14:04.354
!MESSAGE Index -1 out of bounds for length 10
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(SourceElementParser.java:861)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1138)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:273)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:193)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2023-02-27 11:14:04.354
!MESSAGE Index -1 out of bounds for length 10
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(SourceElementParser.java:861)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1138)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:273)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:193)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-02-27 11:14:04.355
!MESSAGE Error in JDT Core during reconcile
!STACK 1
Java Model Exception: java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:326)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:193)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)
Caused by: java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(SourceElementParser.java:861)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1138)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:273)
	... 18 more
Caused by: java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(SourceElementParser.java:861)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1138)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:273)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:193)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)
!SUBENTRY 1 org.eclipse.jdt.core 4 1005 2023-02-27 11:14:04.355
!MESSAGE Index -1 out of bounds for length 10
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.getTypeReference(SourceElementParser.java:861)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.internal.compiler.SourceElementParser.parseCompilationUnit(SourceElementParser.java:1138)
	at org.eclipse.jdt.internal.core.CompilationUnitProblemFinder.process(CompilationUnitProblemFinder.java:273)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:193)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-02-27 11:14:07.520
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReference(Parser.java:12245)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1270)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:790)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1245)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-02-27 11:14:07.521
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReference(Parser.java:12245)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1270)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:790)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1245)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-02-27 11:14:07.566
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReference(Parser.java:12245)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1270)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:790)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1245)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-02-27 11:14:07.567
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: Index -1 out of bounds for length 10
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReferenceForGenericType(Parser.java:12340)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getTypeReference(Parser.java:12245)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRecordPatternWithId(Parser.java:10929)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7499)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13149)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parseStatements(Parser.java:13805)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisitMethod(Parser.java:14144)
	at org.eclipse.jdt.internal.compiler.parser.Parser$1MethodVisitor.endVisit(Parser.java:14130)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.traverse(MethodDeclaration.java:440)
	at org.eclipse.jdt.internal.compiler.parser.Parser.recoverStatements(Parser.java:14250)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13216)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:13505)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.parseStatements(MethodDeclaration.java:251)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.parseMethods(TypeDeclaration.java:1143)
	at org.eclipse.jdt.internal.compiler.parser.Parser.getMethodBodies(Parser.java:12167)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1270)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:790)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1245)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 12:03:03.840
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es " + fahrenheit);

        System.out.println("1 centigrado a kelvin es " + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string */

        String cantidad = "15";

        String precio = "115.20";

        /*que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         /*(Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un */

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar*/
        
        int numero1 = 5;
        int numero2 = 7;
        int numero3 =12;
        
        int suma = numero1 + numero2 + numero3; //operador +, esperamos un 24
        int resta = numero1 - numero2 - numero3; //esperamos -14
        int multiplicación2= numero1 * numero2 * numero3; //operador *, esperamos 420
        int división = numero2 / numero1; //operador /, esperamos 1,4
        int modulo = numero2 % numero1; //operador %, esperamos un 2
        int incremento = ++numero3;
        int decremento= --numero2;
        
        System.out.println("La suma es: "+ suma);
        System.out.println("La resta es: "+ resta);
        System.out.println("La multiplicación es: "+ multiplicación2);
        System.out.println("La división es: "+ división);
        System.out.println("La modulo es: "+ modulo);
        System.out.println("El incremento es: "+ incremento);
        System.out.println("El decremento: "+ decremento);
    
        //Ejemplo IMC
        
        /*import java.util.Scanner
        
        Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
        int c = 28;
                int d = 9;

                if (0 == c % d) { 
                    System.out.println("Es un número par");
                } else {
                    System.out.println("Es un número impar");
                }

                Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
                    }

                }
        float num1 = 3;
                float num2 = 2;
                float num3 = 2;
                float num4 = 5;
                float sumaf = num1 + num2;
                float multiplicaciónf = num3 * num4;
                float divisiónf = sumaf / multiplicaciónf;

                System.out.println(sumaf);
                System.out.println(multiplicaciónf);
                System.out.println(divisiónf);
*/
        
        //Declara 3 variables de tipo entero y utiliza el operador * y %
        
        int NumInt1 = 10;
        int NumInt2 = 2;
        long Resultado1 = NumInt1 % NumInt2;
        		
        		("Residuo de " + NumInt1 + "entre " + NumInt2 + "es: " + NumInt1 % NumInt2 ) ;
       
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-02-27 12:03:03.875
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-02-27 12:03:03.876
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 12:03:03.936
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es " + fahrenheit);

        System.out.println("1 centigrado a kelvin es " + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string */

        String cantidad = "15";

        String precio = "115.20";

        /*que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         /*(Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un */

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar*/
        
        int numero1 = 5;
        int numero2 = 7;
        int numero3 =12;
        
        int suma = numero1 + numero2 + numero3; //operador +, esperamos un 24
        int resta = numero1 - numero2 - numero3; //esperamos -14
        int multiplicación2= numero1 * numero2 * numero3; //operador *, esperamos 420
        int división = numero2 / numero1; //operador /, esperamos 1,4
        int modulo = numero2 % numero1; //operador %, esperamos un 2
        int incremento = ++numero3;
        int decremento= --numero2;
        
        System.out.println("La suma es: "+ suma);
        System.out.println("La resta es: "+ resta);
        System.out.println("La multiplicación es: "+ multiplicación2);
        System.out.println("La división es: "+ división);
        System.out.println("La modulo es: "+ modulo);
        System.out.println("El incremento es: "+ incremento);
        System.out.println("El decremento: "+ decremento);
    
        //Ejemplo IMC
        
        /*import java.util.Scanner
        
        Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
        int c = 28;
                int d = 9;

                if (0 == c % d) { 
                    System.out.println("Es un número par");
                } else {
                    System.out.println("Es un número impar");
                }

                Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
                    }

                }
        float num1 = 3;
                float num2 = 2;
                float num3 = 2;
                float num4 = 5;
                float sumaf = num1 + num2;
                float multiplicaciónf = num3 * num4;
                float divisiónf = sumaf / multiplicaciónf;

                System.out.println(sumaf);
                System.out.println(multiplicaciónf);
                System.out.println(divisiónf);
*/
        
        //Declara 3 variables de tipo entero y utiliza el operador * y %
        
        int NumInt1 = 10;
        int NumInt2 = 2;
        long Resultado1 = NumInt1 % NumInt2;
        		
        		("Residuo de " + NumInt1 + "entre " + NumInt2 + "es: " + NumInt1 % NumInt2 ) ;
       
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-02-27 12:03:03.938
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-02-27 12:03:03.938
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 12:03:06.632
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es " + fahrenheit);

        System.out.println("1 centigrado a kelvin es " + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string */

        String cantidad = "15";

        String precio = "115.20";

        /*que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         /*(Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un */

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar*/
        
        int numero1 = 5;
        int numero2 = 7;
        int numero3 =12;
        
        int suma = numero1 + numero2 + numero3; //operador +, esperamos un 24
        int resta = numero1 - numero2 - numero3; //esperamos -14
        int multiplicación2= numero1 * numero2 * numero3; //operador *, esperamos 420
        int división = numero2 / numero1; //operador /, esperamos 1,4
        int modulo = numero2 % numero1; //operador %, esperamos un 2
        int incremento = ++numero3;
        int decremento= --numero2;
        
        System.out.println("La suma es: "+ suma);
        System.out.println("La resta es: "+ resta);
        System.out.println("La multiplicación es: "+ multiplicación2);
        System.out.println("La división es: "+ división);
        System.out.println("La modulo es: "+ modulo);
        System.out.println("El incremento es: "+ incremento);
        System.out.println("El decremento: "+ decremento);
    
        //Ejemplo IMC
        
        /*import java.util.Scanner
        
        Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
        int c = 28;
                int d = 9;

                if (0 == c % d) { 
                    System.out.println("Es un número par");
                } else {
                    System.out.println("Es un número impar");
                }

                Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
                    }

                }
        float num1 = 3;
                float num2 = 2;
                float num3 = 2;
                float num4 = 5;
                float sumaf = num1 + num2;
                float multiplicaciónf = num3 * num4;
                float divisiónf = sumaf / multiplicaciónf;

                System.out.println(sumaf);
                System.out.println(multiplicaciónf);
                System.out.println(divisiónf);
*/
        
        //Declara 3 variables de tipo entero y utiliza el operador * y %
        
        int NumInt1 = 10;
        int NumInt2 = 2;
        long Resultado1 = NumInt1 % NumInt2;
        		
        		("Residuo de " + NumInt1 + "entre " + NumInt2 + "es: " + NumInt1 % NumInt2 ) ;
       
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-02-27 12:03:06.637
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-02-27 12:03:06.640
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 12:03:08.568
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es " + fahrenheit);

        System.out.println("1 centigrado a kelvin es " + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string */

        String cantidad = "15";

        String precio = "115.20";

        /*que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         /*(Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un */

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar*/
        
        int numero1 = 5;
        int numero2 = 7;
        int numero3 =12;
        
        int suma = numero1 + numero2 + numero3; //operador +, esperamos un 24
        int resta = numero1 - numero2 - numero3; //esperamos -14
        int multiplicación2= numero1 * numero2 * numero3; //operador *, esperamos 420
        int división = numero2 / numero1; //operador /, esperamos 1,4
        int modulo = numero2 % numero1; //operador %, esperamos un 2
        int incremento = ++numero3;
        int decremento= --numero2;
        
        System.out.println("La suma es: "+ suma);
        System.out.println("La resta es: "+ resta);
        System.out.println("La multiplicación es: "+ multiplicación2);
        System.out.println("La división es: "+ división);
        System.out.println("La modulo es: "+ modulo);
        System.out.println("El incremento es: "+ incremento);
        System.out.println("El decremento: "+ decremento);
    
        //Ejemplo IMC
        
        /*import java.util.Scanner
        
        Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
        int c = 28;
                int d = 9;

                if (0 == c % d) { 
                    System.out.println("Es un número par");
                } else {
                    System.out.println("Es un número impar");
                }

                Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
                    }

                }
        float num1 = 3;
                float num2 = 2;
                float num3 = 2;
                float num4 = 5;
                float sumaf = num1 + num2;
                float multiplicaciónf = num3 * num4;
                float divisiónf = sumaf / multiplicaciónf;

                System.out.println(sumaf);
                System.out.println(multiplicaciónf);
                System.out.println(divisiónf);
*/
        
        //Declara 3 variables de tipo entero y utiliza el operador * y %
        
        int NumInt1 = 10;
        int NumInt2 = 2;
        long Resultado1 = NumInt1 % NumInt2;
        		
        		("Residuo de " + NumInt1 + "entre " + NumInt2 + "es: " + NumInt1 % NumInt2 ) ;
       
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-02-27 12:03:08.571
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-02-27 12:03:08.575
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 12:03:09.925
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es " + fahrenheit);

        System.out.println("1 centigrado a kelvin es " + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string */

        String cantidad = "15";

        String precio = "115.20";

        /*que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         /*(Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un */

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar*/
        
        int numero1 = 5;
        int numero2 = 7;
        int numero3 =12;
        
        int suma = numero1 + numero2 + numero3; //operador +, esperamos un 24
        int resta = numero1 - numero2 - numero3; //esperamos -14
        int multiplicación2= numero1 * numero2 * numero3; //operador *, esperamos 420
        int división = numero2 / numero1; //operador /, esperamos 1,4
        int modulo = numero2 % numero1; //operador %, esperamos un 2
        int incremento = ++numero3;
        int decremento= --numero2;
        
        System.out.println("La suma es: "+ suma);
        System.out.println("La resta es: "+ resta);
        System.out.println("La multiplicación es: "+ multiplicación2);
        System.out.println("La división es: "+ división);
        System.out.println("La modulo es: "+ modulo);
        System.out.println("El incremento es: "+ incremento);
        System.out.println("El decremento: "+ decremento);
    
        //Ejemplo IMC
        
        /*import java.util.Scanner
        
        Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
        int c = 28;
                int d = 9;

                if (0 == c % d) { 
                    System.out.println("Es un número par");
                } else {
                    System.out.println("Es un número impar");
                }

                Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
                    }

                }
        float num1 = 3;
                float num2 = 2;
                float num3 = 2;
                float num4 = 5;
                float sumaf = num1 + num2;
                float multiplicaciónf = num3 * num4;
                float divisiónf = sumaf / multiplicaciónf;

                System.out.println(sumaf);
                System.out.println(multiplicaciónf);
                System.out.println(divisiónf);
*/
        
        //Declara 3 variables de tipo entero y utiliza el operador * y %
        
        int NumInt1 = 10;
        int NumInt2 = 2;
        long Resultado1 = NumInt1 % NumInt2 ;
        		
        		("Residuo de " + NumInt1 + "entre " + NumInt2 + "es: " + NumInt1 % NumInt2 ) ;
       
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-02-27 12:03:09.930
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-02-27 12:03:09.933
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 12:03:09.981
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es " + fahrenheit);

        System.out.println("1 centigrado a kelvin es " + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string */

        String cantidad = "15";

        String precio = "115.20";

        /*que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         /*(Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un */

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar*/
        
        int numero1 = 5;
        int numero2 = 7;
        int numero3 =12;
        
        int suma = numero1 + numero2 + numero3; //operador +, esperamos un 24
        int resta = numero1 - numero2 - numero3; //esperamos -14
        int multiplicación2= numero1 * numero2 * numero3; //operador *, esperamos 420
        int división = numero2 / numero1; //operador /, esperamos 1,4
        int modulo = numero2 % numero1; //operador %, esperamos un 2
        int incremento = ++numero3;
        int decremento= --numero2;
        
        System.out.println("La suma es: "+ suma);
        System.out.println("La resta es: "+ resta);
        System.out.println("La multiplicación es: "+ multiplicación2);
        System.out.println("La división es: "+ división);
        System.out.println("La modulo es: "+ modulo);
        System.out.println("El incremento es: "+ incremento);
        System.out.println("El decremento: "+ decremento);
    
        //Ejemplo IMC
        
        /*import java.util.Scanner
        
        Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
        int c = 28;
                int d = 9;

                if (0 == c % d) { 
                    System.out.println("Es un número par");
                } else {
                    System.out.println("Es un número impar");
                }

                Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
                    }

                }
        float num1 = 3;
                float num2 = 2;
                float num3 = 2;
                float num4 = 5;
                float sumaf = num1 + num2;
                float multiplicaciónf = num3 * num4;
                float divisiónf = sumaf / multiplicaciónf;

                System.out.println(sumaf);
                System.out.println(multiplicaciónf);
                System.out.println(divisiónf);
*/
        
        //Declara 3 variables de tipo entero y utiliza el operador * y %
        
        int NumInt1 = 10;
        int NumInt2 = 2;
        long Resultado1 = NumInt1 % NumInt2 ;
        		
        		("Residuo de " + NumInt1 + "entre " + NumInt2 + "es: " + NumInt1 % NumInt2 ) ;
       
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-02-27 12:03:09.982
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-02-27 12:03:09.983
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 12:03:11.379
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es " + fahrenheit);

        System.out.println("1 centigrado a kelvin es " + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string */

        String cantidad = "15";

        String precio = "115.20";

        /*que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         /*(Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un */

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar*/
        
        int numero1 = 5;
        int numero2 = 7;
        int numero3 =12;
        
        int suma = numero1 + numero2 + numero3; //operador +, esperamos un 24
        int resta = numero1 - numero2 - numero3; //esperamos -14
        int multiplicación2= numero1 * numero2 * numero3; //operador *, esperamos 420
        int división = numero2 / numero1; //operador /, esperamos 1,4
        int modulo = numero2 % numero1; //operador %, esperamos un 2
        int incremento = ++numero3;
        int decremento= --numero2;
        
        System.out.println("La suma es: "+ suma);
        System.out.println("La resta es: "+ resta);
        System.out.println("La multiplicación es: "+ multiplicación2);
        System.out.println("La división es: "+ división);
        System.out.println("La modulo es: "+ modulo);
        System.out.println("El incremento es: "+ incremento);
        System.out.println("El decremento: "+ decremento);
    
        //Ejemplo IMC
        
        /*import java.util.Scanner
        
        Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
        int c = 28;
                int d = 9;

                if (0 == c % d) { 
                    System.out.println("Es un número par");
                } else {
                    System.out.println("Es un número impar");
                }

                Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
                    }

                }
        float num1 = 3;
                float num2 = 2;
                float num3 = 2;
                float num4 = 5;
                float sumaf = num1 + num2;
                float multiplicaciónf = num3 * num4;
                float divisiónf = sumaf / multiplicaciónf;

                System.out.println(sumaf);
                System.out.println(multiplicaciónf);
                System.out.println(divisiónf);
*/
        
        //Declara 3 variables de tipo entero y utiliza el operador * y %
        
        int NumInt1 = 10;
        int NumInt2 = 2;
        long Resultado1 = NumInt1 % NumInt2 ;
        		
        		("Residuo de " + NumInt1 + "entre " + NumInt2 + "es: " + NumInt1 % NumInt2 ) ;
       
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-02-27 12:03:11.383
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-02-27 12:03:11.386
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 12:03:11.431
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es " + fahrenheit);

        System.out.println("1 centigrado a kelvin es " + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string */

        String cantidad = "15";

        String precio = "115.20";

        /*que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         /*(Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un */

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar*/
        
        int numero1 = 5;
        int numero2 = 7;
        int numero3 =12;
        
        int suma = numero1 + numero2 + numero3; //operador +, esperamos un 24
        int resta = numero1 - numero2 - numero3; //esperamos -14
        int multiplicación2= numero1 * numero2 * numero3; //operador *, esperamos 420
        int división = numero2 / numero1; //operador /, esperamos 1,4
        int modulo = numero2 % numero1; //operador %, esperamos un 2
        int incremento = ++numero3;
        int decremento= --numero2;
        
        System.out.println("La suma es: "+ suma);
        System.out.println("La resta es: "+ resta);
        System.out.println("La multiplicación es: "+ multiplicación2);
        System.out.println("La división es: "+ división);
        System.out.println("La modulo es: "+ modulo);
        System.out.println("El incremento es: "+ incremento);
        System.out.println("El decremento: "+ decremento);
    
        //Ejemplo IMC
        
        /*import java.util.Scanner
        
        Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
        int c = 28;
                int d = 9;

                if (0 == c % d) { 
                    System.out.println("Es un número par");
                } else {
                    System.out.println("Es un número impar");
                }

                Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
                    }

                }
        float num1 = 3;
                float num2 = 2;
                float num3 = 2;
                float num4 = 5;
                float sumaf = num1 + num2;
                float multiplicaciónf = num3 * num4;
                float divisiónf = sumaf / multiplicaciónf;

                System.out.println(sumaf);
                System.out.println(multiplicaciónf);
                System.out.println(divisiónf);
*/
        
        //Declara 3 variables de tipo entero y utiliza el operador * y %
        
        int NumInt1 = 10;
        int NumInt2 = 2;
        long Resultado1 = NumInt1 % NumInt2 ;
        		
        		("Residuo de " + NumInt1 + "entre " + NumInt2 + "es: " + NumInt1 % NumInt2 ) ;
       
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-02-27 12:03:11.432
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-02-27 12:03:11.432
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 12:03:13.126
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es " + fahrenheit);

        System.out.println("1 centigrado a kelvin es " + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string */

        String cantidad = "15";

        String precio = "115.20";

        /*que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         /*(Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un */

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar*/
        
        int numero1 = 5;
        int numero2 = 7;
        int numero3 =12;
        
        int suma = numero1 + numero2 + numero3; //operador +, esperamos un 24
        int resta = numero1 - numero2 - numero3; //esperamos -14
        int multiplicación2= numero1 * numero2 * numero3; //operador *, esperamos 420
        int división = numero2 / numero1; //operador /, esperamos 1,4
        int modulo = numero2 % numero1; //operador %, esperamos un 2
        int incremento = ++numero3;
        int decremento= --numero2;
        
        System.out.println("La suma es: "+ suma);
        System.out.println("La resta es: "+ resta);
        System.out.println("La multiplicación es: "+ multiplicación2);
        System.out.println("La división es: "+ división);
        System.out.println("La modulo es: "+ modulo);
        System.out.println("El incremento es: "+ incremento);
        System.out.println("El decremento: "+ decremento);
    
        //Ejemplo IMC
        
        /*import java.util.Scanner
        
        Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
        int c = 28;
                int d = 9;

                if (0 == c % d) { 
                    System.out.println("Es un número par");
                } else {
                    System.out.println("Es un número impar");
                }

                Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
                    }

                }
        float num1 = 3;
                float num2 = 2;
                float num3 = 2;
                float num4 = 5;
                float sumaf = num1 + num2;
                float multiplicaciónf = num3 * num4;
                float divisiónf = sumaf / multiplicaciónf;

                System.out.println(sumaf);
                System.out.println(multiplicaciónf);
                System.out.println(divisiónf);
*/
        
        //Declara 3 variables de tipo entero y utiliza el operador * y %
        
        int NumInt1 = 10;
        int NumInt2 = 2;
        long Resultado1 = NumInt1 % NumInt2 ;
        		
        		("Residuo de " + NumInt1 + "entre " + NumInt2 + "es: " + NumInt1 % NumInt2 ) ;
       
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-02-27 12:03:13.129
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-02-27 12:03:13.131
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 12:03:13.799
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es " + fahrenheit);

        System.out.println("1 centigrado a kelvin es " + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string */

        String cantidad = "15";

        String precio = "115.20";

        /*que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         /*(Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un */

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar*/
        
        int numero1 = 5;
        int numero2 = 7;
        int numero3 =12;
        
        int suma = numero1 + numero2 + numero3; //operador +, esperamos un 24
        int resta = numero1 - numero2 - numero3; //esperamos -14
        int multiplicación2= numero1 * numero2 * numero3; //operador *, esperamos 420
        int división = numero2 / numero1; //operador /, esperamos 1,4
        int modulo = numero2 % numero1; //operador %, esperamos un 2
        int incremento = ++numero3;
        int decremento= --numero2;
        
        System.out.println("La suma es: "+ suma);
        System.out.println("La resta es: "+ resta);
        System.out.println("La multiplicación es: "+ multiplicación2);
        System.out.println("La división es: "+ división);
        System.out.println("La modulo es: "+ modulo);
        System.out.println("El incremento es: "+ incremento);
        System.out.println("El decremento: "+ decremento);
    
        //Ejemplo IMC
        
        /*import java.util.Scanner
        
        Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
        int c = 28;
                int d = 9;

                if (0 == c % d) { 
                    System.out.println("Es un número par");
                } else {
                    System.out.println("Es un número impar");
                }

                Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
                    }

                }
        float num1 = 3;
                float num2 = 2;
                float num3 = 2;
                float num4 = 5;
                float sumaf = num1 + num2;
                float multiplicaciónf = num3 * num4;
                float divisiónf = sumaf / multiplicaciónf;

                System.out.println(sumaf);
                System.out.println(multiplicaciónf);
                System.out.println(divisiónf);
*/
        
        //Declara 3 variables de tipo entero y utiliza el operador * y %
        
        int NumInt1 = 10;
        int NumInt2 = 2;
        long Resultado1 = NumInt1 % NumInt2 ;
        		
        		("Residuo de " + NumInt1 + "entre " + NumInt2 + "es: " + NumInt1 % NumInt2 ) ;
       
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-02-27 12:03:13.803
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-02-27 12:03:13.806
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 12:03:14.616
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es " + fahrenheit);

        System.out.println("1 centigrado a kelvin es " + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string */

        String cantidad = "15";

        String precio = "115.20";

        /*que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         /*(Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un */

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar*/
        
        int numero1 = 5;
        int numero2 = 7;
        int numero3 =12;
        
        int suma = numero1 + numero2 + numero3; //operador +, esperamos un 24
        int resta = numero1 - numero2 - numero3; //esperamos -14
        int multiplicación2= numero1 * numero2 * numero3; //operador *, esperamos 420
        int división = numero2 / numero1; //operador /, esperamos 1,4
        int modulo = numero2 % numero1; //operador %, esperamos un 2
        int incremento = ++numero3;
        int decremento= --numero2;
        
        System.out.println("La suma es: "+ suma);
        System.out.println("La resta es: "+ resta);
        System.out.println("La multiplicación es: "+ multiplicación2);
        System.out.println("La división es: "+ división);
        System.out.println("La modulo es: "+ modulo);
        System.out.println("El incremento es: "+ incremento);
        System.out.println("El decremento: "+ decremento);
    
        //Ejemplo IMC
        
        /*import java.util.Scanner
        
        Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
        int c = 28;
                int d = 9;

                if (0 == c % d) { 
                    System.out.println("Es un número par");
                } else {
                    System.out.println("Es un número impar");
                }

                Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
                    }

                }
        float num1 = 3;
                float num2 = 2;
                float num3 = 2;
                float num4 = 5;
                float sumaf = num1 + num2;
                float multiplicaciónf = num3 * num4;
                float divisiónf = sumaf / multiplicaciónf;

                System.out.println(sumaf);
                System.out.println(multiplicaciónf);
                System.out.println(divisiónf);
*/
        
        //Declara 3 variables de tipo entero y utiliza el operador * y %
        
        int NumInt1 = 10;
        int NumInt2 = 2;
        long Resultado1 = NumInt1 % NumInt2 ;
        		
        		("Residuo de " + NumInt1 + "entre " + NumInt2 + "es: " + NumInt1 % NumInt2 ) ;
       
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-02-27 12:03:14.619
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-02-27 12:03:14.622
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 12:03:16.764
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es " + fahrenheit);

        System.out.println("1 centigrado a kelvin es " + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string */

        String cantidad = "15";

        String precio = "115.20";

        /*que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         /*(Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un */

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar*/
        
        int numero1 = 5;
        int numero2 = 7;
        int numero3 =12;
        
        int suma = numero1 + numero2 + numero3; //operador +, esperamos un 24
        int resta = numero1 - numero2 - numero3; //esperamos -14
        int multiplicación2= numero1 * numero2 * numero3; //operador *, esperamos 420
        int división = numero2 / numero1; //operador /, esperamos 1,4
        int modulo = numero2 % numero1; //operador %, esperamos un 2
        int incremento = ++numero3;
        int decremento= --numero2;
        
        System.out.println("La suma es: "+ suma);
        System.out.println("La resta es: "+ resta);
        System.out.println("La multiplicación es: "+ multiplicación2);
        System.out.println("La división es: "+ división);
        System.out.println("La modulo es: "+ modulo);
        System.out.println("El incremento es: "+ incremento);
        System.out.println("El decremento: "+ decremento);
    
        //Ejemplo IMC
        
        /*import java.util.Scanner
        
        Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
        int c = 28;
                int d = 9;

                if (0 == c % d) { 
                    System.out.println("Es un número par");
                } else {
                    System.out.println("Es un número impar");
                }

                Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
                    }

                }
        float num1 = 3;
                float num2 = 2;
                float num3 = 2;
                float num4 = 5;
                float sumaf = num1 + num2;
                float multiplicaciónf = num3 * num4;
                float divisiónf = sumaf / multiplicaciónf;

                System.out.println(sumaf);
                System.out.println(multiplicaciónf);
                System.out.println(divisiónf);
*/
        
        //Declara 3 variables de tipo entero y utiliza el operador * y %
        
        int NumInt1 = 10;
        int NumInt2 = 2;
        long Resultado1 = NumInt1 % NumInt2 ;
        		
        	("Residuo de " + NumInt1 + "entre " + NumInt2 + "es: " + NumInt1 % NumInt2 ) ;
       
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-02-27 12:03:16.767
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-02-27 12:03:16.770
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 12:03:16.819
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es " + fahrenheit);

        System.out.println("1 centigrado a kelvin es " + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string */

        String cantidad = "15";

        String precio = "115.20";

        /*que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         /*(Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un */

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar*/
        
        int numero1 = 5;
        int numero2 = 7;
        int numero3 =12;
        
        int suma = numero1 + numero2 + numero3; //operador +, esperamos un 24
        int resta = numero1 - numero2 - numero3; //esperamos -14
        int multiplicación2= numero1 * numero2 * numero3; //operador *, esperamos 420
        int división = numero2 / numero1; //operador /, esperamos 1,4
        int modulo = numero2 % numero1; //operador %, esperamos un 2
        int incremento = ++numero3;
        int decremento= --numero2;
        
        System.out.println("La suma es: "+ suma);
        System.out.println("La resta es: "+ resta);
        System.out.println("La multiplicación es: "+ multiplicación2);
        System.out.println("La división es: "+ división);
        System.out.println("La modulo es: "+ modulo);
        System.out.println("El incremento es: "+ incremento);
        System.out.println("El decremento: "+ decremento);
    
        //Ejemplo IMC
        
        /*import java.util.Scanner
        
        Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
        int c = 28;
                int d = 9;

                if (0 == c % d) { 
                    System.out.println("Es un número par");
                } else {
                    System.out.println("Es un número impar");
                }

                Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
                    }

                }
        float num1 = 3;
                float num2 = 2;
                float num3 = 2;
                float num4 = 5;
                float sumaf = num1 + num2;
                float multiplicaciónf = num3 * num4;
                float divisiónf = sumaf / multiplicaciónf;

                System.out.println(sumaf);
                System.out.println(multiplicaciónf);
                System.out.println(divisiónf);
*/
        
        //Declara 3 variables de tipo entero y utiliza el operador * y %
        
        int NumInt1 = 10;
        int NumInt2 = 2;
        long Resultado1 = NumInt1 % NumInt2 ;
        		
        	("Residuo de " + NumInt1 + "entre " + NumInt2 + "es: " + NumInt1 % NumInt2 ) ;
       
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-02-27 12:03:16.820
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-02-27 12:03:16.821
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 12:03:17.419
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es " + fahrenheit);

        System.out.println("1 centigrado a kelvin es " + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string */

        String cantidad = "15";

        String precio = "115.20";

        /*que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         /*(Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un */

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar*/
        
        int numero1 = 5;
        int numero2 = 7;
        int numero3 =12;
        
        int suma = numero1 + numero2 + numero3; //operador +, esperamos un 24
        int resta = numero1 - numero2 - numero3; //esperamos -14
        int multiplicación2= numero1 * numero2 * numero3; //operador *, esperamos 420
        int división = numero2 / numero1; //operador /, esperamos 1,4
        int modulo = numero2 % numero1; //operador %, esperamos un 2
        int incremento = ++numero3;
        int decremento= --numero2;
        
        System.out.println("La suma es: "+ suma);
        System.out.println("La resta es: "+ resta);
        System.out.println("La multiplicación es: "+ multiplicación2);
        System.out.println("La división es: "+ división);
        System.out.println("La modulo es: "+ modulo);
        System.out.println("El incremento es: "+ incremento);
        System.out.println("El decremento: "+ decremento);
    
        //Ejemplo IMC
        
        /*import java.util.Scanner
        
        Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
        int c = 28;
                int d = 9;

                if (0 == c % d) { 
                    System.out.println("Es un número par");
                } else {
                    System.out.println("Es un número impar");
                }

                Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
                    }

                }
        float num1 = 3;
                float num2 = 2;
                float num3 = 2;
                float num4 = 5;
                float sumaf = num1 + num2;
                float multiplicaciónf = num3 * num4;
                float divisiónf = sumaf / multiplicaciónf;

                System.out.println(sumaf);
                System.out.println(multiplicaciónf);
                System.out.println(divisiónf);
*/
        
        //Declara 3 variables de tipo entero y utiliza el operador * y %
        
        int NumInt1 = 10;
        int NumInt2 = 2;
        long Resultado1 = NumInt1 % NumInt2 ;
        		
        ("Residuo de " + NumInt1 + "entre " + NumInt2 + "es: " + NumInt1 % NumInt2 ) ;
       
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-02-27 12:03:17.421
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-02-27 12:03:17.423
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 12:03:17.463
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es " + fahrenheit);

        System.out.println("1 centigrado a kelvin es " + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string */

        String cantidad = "15";

        String precio = "115.20";

        /*que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         /*(Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un */

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar*/
        
        int numero1 = 5;
        int numero2 = 7;
        int numero3 =12;
        
        int suma = numero1 + numero2 + numero3; //operador +, esperamos un 24
        int resta = numero1 - numero2 - numero3; //esperamos -14
        int multiplicación2= numero1 * numero2 * numero3; //operador *, esperamos 420
        int división = numero2 / numero1; //operador /, esperamos 1,4
        int modulo = numero2 % numero1; //operador %, esperamos un 2
        int incremento = ++numero3;
        int decremento= --numero2;
        
        System.out.println("La suma es: "+ suma);
        System.out.println("La resta es: "+ resta);
        System.out.println("La multiplicación es: "+ multiplicación2);
        System.out.println("La división es: "+ división);
        System.out.println("La modulo es: "+ modulo);
        System.out.println("El incremento es: "+ incremento);
        System.out.println("El decremento: "+ decremento);
    
        //Ejemplo IMC
        
        /*import java.util.Scanner
        
        Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
        int c = 28;
                int d = 9;

                if (0 == c % d) { 
                    System.out.println("Es un número par");
                } else {
                    System.out.println("Es un número impar");
                }

                Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
                    }

                }
        float num1 = 3;
                float num2 = 2;
                float num3 = 2;
                float num4 = 5;
                float sumaf = num1 + num2;
                float multiplicaciónf = num3 * num4;
                float divisiónf = sumaf / multiplicaciónf;

                System.out.println(sumaf);
                System.out.println(multiplicaciónf);
                System.out.println(divisiónf);
*/
        
        //Declara 3 variables de tipo entero y utiliza el operador * y %
        
        int NumInt1 = 10;
        int NumInt2 = 2;
        long Resultado1 = NumInt1 % NumInt2 ;
        		
        ("Residuo de " + NumInt1 + "entre " + NumInt2 + "es: " + NumInt1 % NumInt2 ) ;
       
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-02-27 12:03:17.464
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-02-27 12:03:17.465
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 12:03:19.932
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es " + fahrenheit);

        System.out.println("1 centigrado a kelvin es " + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string */

        String cantidad = "15";

        String precio = "115.20";

        /*que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         /*(Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un */

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar*/
        
        int numero1 = 5;
        int numero2 = 7;
        int numero3 =12;
        
        int suma = numero1 + numero2 + numero3; //operador +, esperamos un 24
        int resta = numero1 - numero2 - numero3; //esperamos -14
        int multiplicación2= numero1 * numero2 * numero3; //operador *, esperamos 420
        int división = numero2 / numero1; //operador /, esperamos 1,4
        int modulo = numero2 % numero1; //operador %, esperamos un 2
        int incremento = ++numero3;
        int decremento= --numero2;
        
        System.out.println("La suma es: "+ suma);
        System.out.println("La resta es: "+ resta);
        System.out.println("La multiplicación es: "+ multiplicación2);
        System.out.println("La división es: "+ división);
        System.out.println("La modulo es: "+ modulo);
        System.out.println("El incremento es: "+ incremento);
        System.out.println("El decremento: "+ decremento);
    
        //Ejemplo IMC
        
        /*import java.util.Scanner
        
        Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
        int c = 28;
                int d = 9;

                if (0 == c % d) { 
                    System.out.println("Es un número par");
                } else {
                    System.out.println("Es un número impar");
                }

                Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
                    }

                }
        float num1 = 3;
                float num2 = 2;
                float num3 = 2;
                float num4 = 5;
                float sumaf = num1 + num2;
                float multiplicaciónf = num3 * num4;
                float divisiónf = sumaf / multiplicaciónf;

                System.out.println(sumaf);
                System.out.println(multiplicaciónf);
                System.out.println(divisiónf);
*/
        
        //Declara 3 variables de tipo entero y utiliza el operador * y %
        
        int NumInt1 = 10;
        int NumInt2 = 2;
        long Resultado1 = NumInt1 % NumInt2 ;
        		
        ("Residuo de " + NumInt1 + "entre " + NumInt2 + "es: " + NumInt1 % NumInt2 ) ;
       
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-02-27 12:03:19.936
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-02-27 12:03:19.939
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 12:03:19.993
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es " + fahrenheit);

        System.out.println("1 centigrado a kelvin es " + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string */

        String cantidad = "15";

        String precio = "115.20";

        /*que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         /*(Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un */

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar*/
        
        int numero1 = 5;
        int numero2 = 7;
        int numero3 =12;
        
        int suma = numero1 + numero2 + numero3; //operador +, esperamos un 24
        int resta = numero1 - numero2 - numero3; //esperamos -14
        int multiplicación2= numero1 * numero2 * numero3; //operador *, esperamos 420
        int división = numero2 / numero1; //operador /, esperamos 1,4
        int modulo = numero2 % numero1; //operador %, esperamos un 2
        int incremento = ++numero3;
        int decremento= --numero2;
        
        System.out.println("La suma es: "+ suma);
        System.out.println("La resta es: "+ resta);
        System.out.println("La multiplicación es: "+ multiplicación2);
        System.out.println("La división es: "+ división);
        System.out.println("La modulo es: "+ modulo);
        System.out.println("El incremento es: "+ incremento);
        System.out.println("El decremento: "+ decremento);
    
        //Ejemplo IMC
        
        /*import java.util.Scanner
        
        Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
        int c = 28;
                int d = 9;

                if (0 == c % d) { 
                    System.out.println("Es un número par");
                } else {
                    System.out.println("Es un número impar");
                }

                Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
                    }

                }
        float num1 = 3;
                float num2 = 2;
                float num3 = 2;
                float num4 = 5;
                float sumaf = num1 + num2;
                float multiplicaciónf = num3 * num4;
                float divisiónf = sumaf / multiplicaciónf;

                System.out.println(sumaf);
                System.out.println(multiplicaciónf);
                System.out.println(divisiónf);
*/
        
        //Declara 3 variables de tipo entero y utiliza el operador * y %
        
        int NumInt1 = 10;
        int NumInt2 = 2;
        long Resultado1 = NumInt1 % NumInt2 ;
        		
        ("Residuo de " + NumInt1 + "entre " + NumInt2 + "es: " + NumInt1 % NumInt2 ) ;
       
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-02-27 12:03:19.995
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-02-27 12:03:19.996
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 12:03:21.187
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es " + fahrenheit);

        System.out.println("1 centigrado a kelvin es " + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string */

        String cantidad = "15";

        String precio = "115.20";

        /*que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         /*(Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un */

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar*/
        
        int numero1 = 5;
        int numero2 = 7;
        int numero3 =12;
        
        int suma = numero1 + numero2 + numero3; //operador +, esperamos un 24
        int resta = numero1 - numero2 - numero3; //esperamos -14
        int multiplicación2= numero1 * numero2 * numero3; //operador *, esperamos 420
        int división = numero2 / numero1; //operador /, esperamos 1,4
        int modulo = numero2 % numero1; //operador %, esperamos un 2
        int incremento = ++numero3;
        int decremento= --numero2;
        
        System.out.println("La suma es: "+ suma);
        System.out.println("La resta es: "+ resta);
        System.out.println("La multiplicación es: "+ multiplicación2);
        System.out.println("La división es: "+ división);
        System.out.println("La modulo es: "+ modulo);
        System.out.println("El incremento es: "+ incremento);
        System.out.println("El decremento: "+ decremento);
    
        //Ejemplo IMC
        
        /*import java.util.Scanner
        
        Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
        int c = 28;
                int d = 9;

                if (0 == c % d) { 
                    System.out.println("Es un número par");
                } else {
                    System.out.println("Es un número impar");
                }

                Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
                    }

                }
        float num1 = 3;
                float num2 = 2;
                float num3 = 2;
                float num4 = 5;
                float sumaf = num1 + num2;
                float multiplicaciónf = num3 * num4;
                float divisiónf = sumaf / multiplicaciónf;

                System.out.println(sumaf);
                System.out.println(multiplicaciónf);
                System.out.println(divisiónf);
*/
        
        //Declara 3 variables de tipo entero y utiliza el operador * y %
        
        int NumInt1 = 10;
        int NumInt2 = 2;
         Resultado1 = NumInt1 % NumInt2 ;
        		
        ("Residuo de " + NumInt1 + "entre " + NumInt2 + "es: " + NumInt1 % NumInt2 ) ;
       
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-02-27 12:03:21.190
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-02-27 12:03:21.194
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 12:03:21.244
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es " + fahrenheit);

        System.out.println("1 centigrado a kelvin es " + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string */

        String cantidad = "15";

        String precio = "115.20";

        /*que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         /*(Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un */

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar*/
        
        int numero1 = 5;
        int numero2 = 7;
        int numero3 =12;
        
        int suma = numero1 + numero2 + numero3; //operador +, esperamos un 24
        int resta = numero1 - numero2 - numero3; //esperamos -14
        int multiplicación2= numero1 * numero2 * numero3; //operador *, esperamos 420
        int división = numero2 / numero1; //operador /, esperamos 1,4
        int modulo = numero2 % numero1; //operador %, esperamos un 2
        int incremento = ++numero3;
        int decremento= --numero2;
        
        System.out.println("La suma es: "+ suma);
        System.out.println("La resta es: "+ resta);
        System.out.println("La multiplicación es: "+ multiplicación2);
        System.out.println("La división es: "+ división);
        System.out.println("La modulo es: "+ modulo);
        System.out.println("El incremento es: "+ incremento);
        System.out.println("El decremento: "+ decremento);
    
        //Ejemplo IMC
        
        /*import java.util.Scanner
        
        Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
        int c = 28;
                int d = 9;

                if (0 == c % d) { 
                    System.out.println("Es un número par");
                } else {
                    System.out.println("Es un número impar");
                }

                Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
                    }

                }
        float num1 = 3;
                float num2 = 2;
                float num3 = 2;
                float num4 = 5;
                float sumaf = num1 + num2;
                float multiplicaciónf = num3 * num4;
                float divisiónf = sumaf / multiplicaciónf;

                System.out.println(sumaf);
                System.out.println(multiplicaciónf);
                System.out.println(divisiónf);
*/
        
        //Declara 3 variables de tipo entero y utiliza el operador * y %
        
        int NumInt1 = 10;
        int NumInt2 = 2;
         Resultado1 = NumInt1 % NumInt2 ;
        		
        ("Residuo de " + NumInt1 + "entre " + NumInt2 + "es: " + NumInt1 % NumInt2 ) ;
       
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-02-27 12:03:21.245
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-02-27 12:03:21.246
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 12:03:22.830
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es " + fahrenheit);

        System.out.println("1 centigrado a kelvin es " + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string */

        String cantidad = "15";

        String precio = "115.20";

        /*que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         /*(Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un */

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar*/
        
        int numero1 = 5;
        int numero2 = 7;
        int numero3 =12;
        
        int suma = numero1 + numero2 + numero3; //operador +, esperamos un 24
        int resta = numero1 - numero2 - numero3; //esperamos -14
        int multiplicación2= numero1 * numero2 * numero3; //operador *, esperamos 420
        int división = numero2 / numero1; //operador /, esperamos 1,4
        int modulo = numero2 % numero1; //operador %, esperamos un 2
        int incremento = ++numero3;
        int decremento= --numero2;
        
        System.out.println("La suma es: "+ suma);
        System.out.println("La resta es: "+ resta);
        System.out.println("La multiplicación es: "+ multiplicación2);
        System.out.println("La división es: "+ división);
        System.out.println("La modulo es: "+ modulo);
        System.out.println("El incremento es: "+ incremento);
        System.out.println("El decremento: "+ decremento);
    
        //Ejemplo IMC
        
        /*import java.util.Scanner
        
        Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
        int c = 28;
                int d = 9;

                if (0 == c % d) { 
                    System.out.println("Es un número par");
                } else {
                    System.out.println("Es un número impar");
                }

                Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
                    }

                }
        float num1 = 3;
                float num2 = 2;
                float num3 = 2;
                float num4 = 5;
                float sumaf = num1 + num2;
                float multiplicaciónf = num3 * num4;
                float divisiónf = sumaf / multiplicaciónf;

                System.out.println(sumaf);
                System.out.println(multiplicaciónf);
                System.out.println(divisiónf);
*/
        
        //Declara 3 variables de tipo entero y utiliza el operador * y %
        
        int NumInt1 = 10;
        int NumInt2 = 2;
        double Resultado1 = NumInt1 % NumInt2 ;
        		
        ("Residuo de " + NumInt1 + "entre " + NumInt2 + "es: " + NumInt1 % NumInt2 ) ;
       
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-02-27 12:03:22.834
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-02-27 12:03:22.837
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 12:03:22.896
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es " + fahrenheit);

        System.out.println("1 centigrado a kelvin es " + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string */

        String cantidad = "15";

        String precio = "115.20";

        /*que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         /*(Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un */

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar*/
        
        int numero1 = 5;
        int numero2 = 7;
        int numero3 =12;
        
        int suma = numero1 + numero2 + numero3; //operador +, esperamos un 24
        int resta = numero1 - numero2 - numero3; //esperamos -14
        int multiplicación2= numero1 * numero2 * numero3; //operador *, esperamos 420
        int división = numero2 / numero1; //operador /, esperamos 1,4
        int modulo = numero2 % numero1; //operador %, esperamos un 2
        int incremento = ++numero3;
        int decremento= --numero2;
        
        System.out.println("La suma es: "+ suma);
        System.out.println("La resta es: "+ resta);
        System.out.println("La multiplicación es: "+ multiplicación2);
        System.out.println("La división es: "+ división);
        System.out.println("La modulo es: "+ modulo);
        System.out.println("El incremento es: "+ incremento);
        System.out.println("El decremento: "+ decremento);
    
        //Ejemplo IMC
        
        /*import java.util.Scanner
        
        Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
        int c = 28;
                int d = 9;

                if (0 == c % d) { 
                    System.out.println("Es un número par");
                } else {
                    System.out.println("Es un número impar");
                }

                Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
                    }

                }
        float num1 = 3;
                float num2 = 2;
                float num3 = 2;
                float num4 = 5;
                float sumaf = num1 + num2;
                float multiplicaciónf = num3 * num4;
                float divisiónf = sumaf / multiplicaciónf;

                System.out.println(sumaf);
                System.out.println(multiplicaciónf);
                System.out.println(divisiónf);
*/
        
        //Declara 3 variables de tipo entero y utiliza el operador * y %
        
        int NumInt1 = 10;
        int NumInt2 = 2;
        double Resultado1 = NumInt1 % NumInt2 ;
        		
        ("Residuo de " + NumInt1 + "entre " + NumInt2 + "es: " + NumInt1 % NumInt2 ) ;
       
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-02-27 12:03:22.897
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-02-27 12:03:22.897
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 12:03:27.264
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es " + fahrenheit);

        System.out.println("1 centigrado a kelvin es " + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string */

        String cantidad = "15";

        String precio = "115.20";

        /*que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         /*(Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un */

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar*/
        
        int numero1 = 5;
        int numero2 = 7;
        int numero3 =12;
        
        int suma = numero1 + numero2 + numero3; //operador +, esperamos un 24
        int resta = numero1 - numero2 - numero3; //esperamos -14
        int multiplicación2= numero1 * numero2 * numero3; //operador *, esperamos 420
        int división = numero2 / numero1; //operador /, esperamos 1,4
        int modulo = numero2 % numero1; //operador %, esperamos un 2
        int incremento = ++numero3;
        int decremento= --numero2;
        
        System.out.println("La suma es: "+ suma);
        System.out.println("La resta es: "+ resta);
        System.out.println("La multiplicación es: "+ multiplicación2);
        System.out.println("La división es: "+ división);
        System.out.println("La modulo es: "+ modulo);
        System.out.println("El incremento es: "+ incremento);
        System.out.println("El decremento: "+ decremento);
    
        //Ejemplo IMC
        
        /*import java.util.Scanner
        
        Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
        int c = 28;
                int d = 9;

                if (0 == c % d) { 
                    System.out.println("Es un número par");
                } else {
                    System.out.println("Es un número impar");
                }

                Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
                    }

                }
        float num1 = 3;
                float num2 = 2;
                float num3 = 2;
                float num4 = 5;
                float sumaf = num1 + num2;
                float multiplicaciónf = num3 * num4;
                float divisiónf = sumaf / multiplicaciónf;

                System.out.println(sumaf);
                System.out.println(multiplicaciónf);
                System.out.println(divisiónf);
*/
        
        //Declara 3 variables de tipo entero y utiliza el operador * y %
        
        int NumInt1 = 10;
        int NumInt2 = 2;
        double Resultado1 = NumInt1 % NumInt2 ;
        		
        System.out.println();("Residuo de " + NumInt1 + "entre " + NumInt2 + "es: " + NumInt1 % NumInt2 ) ;
       
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-02-27 12:03:27.268
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-02-27 12:03:27.271
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:561)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 12:03:30.074
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es " + fahrenheit);

        System.out.println("1 centigrado a kelvin es " + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string */

        String cantidad = "15";

        String precio = "115.20";

        /*que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         /*(Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un */

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar*/
        
        int numero1 = 5;
        int numero2 = 7;
        int numero3 =12;
        
        int suma = numero1 + numero2 + numero3; //operador +, esperamos un 24
        int resta = numero1 - numero2 - numero3; //esperamos -14
        int multiplicación2= numero1 * numero2 * numero3; //operador *, esperamos 420
        int división = numero2 / numero1; //operador /, esperamos 1,4
        int modulo = numero2 % numero1; //operador %, esperamos un 2
        int incremento = ++numero3;
        int decremento= --numero2;
        
        System.out.println("La suma es: "+ suma);
        System.out.println("La resta es: "+ resta);
        System.out.println("La multiplicación es: "+ multiplicación2);
        System.out.println("La división es: "+ división);
        System.out.println("La modulo es: "+ modulo);
        System.out.println("El incremento es: "+ incremento);
        System.out.println("El decremento: "+ decremento);
    
        //Ejemplo IMC
        
        /*import java.util.Scanner
        
        Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
        int c = 28;
                int d = 9;

                if (0 == c % d) { 
                    System.out.println("Es un número par");
                } else {
                    System.out.println("Es un número impar");
                }

                Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
                    }

                }
        float num1 = 3;
                float num2 = 2;
                float num3 = 2;
                float num4 = 5;
                float sumaf = num1 + num2;
                float multiplicaciónf = num3 * num4;
                float divisiónf = sumaf / multiplicaciónf;

                System.out.println(sumaf);
                System.out.println(multiplicaciónf);
                System.out.println(divisiónf);
*/
        
        //Declara 3 variables de tipo entero y utiliza el operador * y %
        
        int NumInt1 = 10;
        int NumInt2 = 2;
        double Resultado1 = NumInt1 % NumInt2 ;
        		
        System.out.println();("Residuo de " + NumInt1 + "entre " + NumInt2 + "es: " + NumInt1 % NumInt2 ) ;
       
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-02-27 12:03:30.077
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-02-27 12:03:30.079
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 12:03:30.089
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es " + fahrenheit);

        System.out.println("1 centigrado a kelvin es " + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string */

        String cantidad = "15";

        String precio = "115.20";

        /*que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         /*(Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un */

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar*/
        
        int numero1 = 5;
        int numero2 = 7;
        int numero3 =12;
        
        int suma = numero1 + numero2 + numero3; //operador +, esperamos un 24
        int resta = numero1 - numero2 - numero3; //esperamos -14
        int multiplicación2= numero1 * numero2 * numero3; //operador *, esperamos 420
        int división = numero2 / numero1; //operador /, esperamos 1,4
        int modulo = numero2 % numero1; //operador %, esperamos un 2
        int incremento = ++numero3;
        int decremento= --numero2;
        
        System.out.println("La suma es: "+ suma);
        System.out.println("La resta es: "+ resta);
        System.out.println("La multiplicación es: "+ multiplicación2);
        System.out.println("La división es: "+ división);
        System.out.println("La modulo es: "+ modulo);
        System.out.println("El incremento es: "+ incremento);
        System.out.println("El decremento: "+ decremento);
    
        //Ejemplo IMC
        
        /*import java.util.Scanner
        
        Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
        int c = 28;
                int d = 9;

                if (0 == c % d) { 
                    System.out.println("Es un número par");
                } else {
                    System.out.println("Es un número impar");
                }

                Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
                    }

                }
        float num1 = 3;
                float num2 = 2;
                float num3 = 2;
                float num4 = 5;
                float sumaf = num1 + num2;
                float multiplicaciónf = num3 * num4;
                float divisiónf = sumaf / multiplicaciónf;

                System.out.println(sumaf);
                System.out.println(multiplicaciónf);
                System.out.println(divisiónf);
*/
        
        //Declara 3 variables de tipo entero y utiliza el operador * y %
        
        int NumInt1 = 10;
        int NumInt2 = 2;
        double Resultado1 = NumInt1 % NumInt2 ;
        		
        System.out.println();("Residuo de " + NumInt1 + "entre " + NumInt2 + "es: " + NumInt1 % NumInt2 ) ;
       
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-02-27 12:03:30.094
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-02-27 12:03:30.095
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-02-27 12:03:30.107
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package tiposDeDatosYVariables;

public class tiposDeDatos {

    public static void main(String[] args) {
    

        byte centigrados = 1;
        double fahrenheit = (centigrados * 1.8) + 32;
        double kelvin = centigrados + 273.15;

        System.out.println("1 centigrado a fahrenheit es " + fahrenheit);

        System.out.println("1 centigrado a kelvin es " + kelvin);

        /*
         * ºF = ºC x 1.8 + 32 formula para convertir grados centigrados a fahrenheit K =
         * ºC + 273.15
         */
   
        double horasTrabajadas = 8.3; //Double y Float se pueden ocupar para numeros decimales, aunque double es mas preciso.
        byte pago = 10;
        double multiplicación = horasTrabajadas * pago;
        System.out.println(multiplicación);
        
        double num = 1.61;
        int numInt = (int)num; //Aqui la variable num que es decimal se convierte a entero con (int)num y se guarda en la variable numInt.
        long numLong = (long)num;
        System.out.println("double: " + num);
        System.out.println("int: " + numInt);
        System.out.println("long: " + numLong);
    

      //casteo a entero 

        //Como ponemos un entero? 

        int numIntCasteo = (int) num; // se pone entre parentesis el tipo de dato que quiero convertir y luego el nombre de la variable que quiero convertir 

        //casteo a long 

        long numLongCasteo = (long) num;

        System.out.println ("double:  " + num);

        System.out.println ("int:  " + numInt);

        System.out.println ("long:  " + numLong);

        /*Como es un número entero lo corta y solo lo marca com el 1, por que el entero pues es solo ese número 

        Supongamos que yo ahora tengo un string */

        String cantidad = "15";

        String precio = "115.20";

        /*que pasaria si quisieramos hacer una operación ?

        tendriamos que cambiarlos 

        String es una clase y es por eso que tiene metodos para hacer estas conversiones 

        ahora como lo hariamos para cambiarlo a un double o un int?*/

        int cantEntero = Integer.parseInt(cantidad);  

         //( Integer que es la clase que hace referencia a los enteros ) Pars es un parseo es decir una conversión de un string a un entero  y vamos a hacer lo mismo con double 

        double precioDouble = Double.parseDouble(precio);

         /*(Para los double tenemos una clase raper que Double pero con mayuscula la D y luego tenemos parseDouble que es el metodo y ahi abrimos parentesis y colocamos el valor que queremos convertir 

        Una vez haciendo esto ya lo estamos convirtiendo y podemos hacer una operación 

        System.out.printIn(El valor total de la compra es: + (“cantEntero * precioDouble”));

        Ahora supongamos que lo queremos hacer al reves 

        tenemos un */

        int edad = 30;

        double estatura = 1.61;

        /*supongamos que no vamos a utilizarlos como número ni para alguna operación 

        vamos a utilizar*/
        
        int numero1 = 5;
        int numero2 = 7;
        int numero3 =12;
        
        int suma = numero1 + numero2 + numero3; //operador +, esperamos un 24
        int resta = numero1 - numero2 - numero3; //esperamos -14
        int multiplicación2= numero1 * numero2 * numero3; //operador *, esperamos 420
        int división = numero2 / numero1; //operador /, esperamos 1,4
        int modulo = numero2 % numero1; //operador %, esperamos un 2
        int incremento = ++numero3;
        int decremento= --numero2;
        
        System.out.println("La suma es: "+ suma);
        System.out.println("La resta es: "+ resta);
        System.out.println("La multiplicación es: "+ multiplicación2);
        System.out.println("La división es: "+ división);
        System.out.println("La modulo es: "+ modulo);
        System.out.println("El incremento es: "+ incremento);
        System.out.println("El decremento: "+ decremento);
    
        //Ejemplo IMC
        
        /*import java.util.Scanner
        
        Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
        int c = 28;
                int d = 9;

                if (0 == c % d) { 
                    System.out.println("Es un número par");
                } else {
                    System.out.println("Es un número impar");
                }

                Scanner pesosc = new Scanner(System.in);
                System.out.println ("Ingresa tu peso");
                float peso = pesosc.nextFloat();
                Scanner alturasc = new Scanner(System.in);
                System.out.println ("Ingresa tu altura");
                float altura = alturasc.nextFloat();

                float IMC = peso / (altura * altura);

                System.out.println("El indice de masa corporal es: " + IMC);
                {

                    if (IMC < 16) {
                        System.out.println("Criterio de ingreso");
                    } else if (IMC >= 16 && IMC < 17) {
                        System.out.println("Infrapeso");
                    } else if (IMC >= 17 && IMC < 18.5) {
                        System.out.println("Bajo peso");
                    } else if (IMC >= 18.5 && IMC < 25) {
                        System.out.println("Peso normal");
                    } else if (IMC >= 25 && IMC < 30) {
                        System.out.println("sobrepeso");
                    } else if (IMC >= 30 && IMC < 35) {
                        System.out.println("Obesidad premorbida");
                    } else if (IMC >= 35 && IMC < 40) {
                        System.out.println("Obesidad morbida");
                    } else {
                        System.out.println("Obesidad hipermorbida");
                    }

                }
        float num1 = 3;
                float num2 = 2;
                float num3 = 2;
                float num4 = 5;
                float sumaf = num1 + num2;
                float multiplicaciónf = num3 * num4;
                float divisiónf = sumaf / multiplicaciónf;

                System.out.println(sumaf);
                System.out.println(multiplicaciónf);
                System.out.println(divisiónf);
*/
        
        //Declara 3 variables de tipo entero y utiliza el operador * y %
        
        int NumInt1 = 10;
        int NumInt2 = 2;
        double Resultado1 = NumInt1 % NumInt2 ;
        		
        System.out.println();("Residuo de " + NumInt1 + "entre " + NumInt2 + "es: " + NumInt1 % NumInt2 ) ;
       
}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-02-27 12:03:30.109
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-02-27 12:03:30.110
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3882)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3124)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3419)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SESSION 2023-02-27 14:14:12.352 -----------------------------------------------
eclipse.buildId=4.17.2.202301310704
java.version=17.0.6
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.springframework.boot.ide.branding.sts4
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.springframework.boot.ide.branding.sts4

!ENTRY ch.qos.logback.classic 1 0 2023-02-27 14:14:14.266
!MESSAGE Activated before the state location was initialized. Retry after the state location is initialized.

!ENTRY ch.qos.logback.classic 1 0 2023-02-27 14:14:18.752
!MESSAGE Logback config file: C:\Cohorte 23\java\java02\java03\.metadata\.plugins\org.eclipse.m2e.logback\logback.2.1.0.20221015-0744.xml

!ENTRY org.eclipse.jface 2 0 2023-02-27 14:14:22.349
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-02-27 14:14:22.349
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2023-02-27 14:14:22.349
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.edit.text.java.rename.element"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.ui.edit.rename"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2023-02-27 14:14:30.300
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\Bart_'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.ui 2 2 2023-02-27 14:14:37.892
!MESSAGE Invalid property category path: org.springframework.ide.eclipse.beans.ui.properties.ProjectPropertyPage (bundle: org.springframework.ide.eclipse.xml.namespaces, propertyPage: org.springframework.ide.eclipse.beans.ui.namespaces.projectPropertyPage)
